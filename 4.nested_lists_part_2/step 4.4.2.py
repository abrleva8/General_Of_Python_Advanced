# На вход программе подаются два натуральных числа n и m, каждое на отдельной строке —
# количество строк и столбцов в матрице.
# Далее вводятся сами элементы матрицы — слова, каждое на отдельной строке;
# подряд идут элементы сначала первой строки, затем второй, и т.д.
#
# Напишите программу, которая считывает элементы матрицы один за другим, выводит их в виде матрицы,
# выводит пустую строку, и снова ту же матрицу, но уже поменяв местами строки со столбцами:
# первая строка выводится как первый столбец, и так далее.
#
# Формат входных данных
# На вход программе подаются два числа n и m — количество строк и столбцов в матрице, далее идут nxm слов,
# каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести считанную матрицу, за ней пустую строку, и ту же матрицу,
# но поменяв местами строки со столбцами. Элементы матрицы разделять одним пробелом.

def read_matrix(n, m):
    return [[input() for _ in range(m)] for _ in range(n)]


# @matrix должна быть квадратной матрицей
def print_matrix(matrix):
    rows, cols = len(matrix), len(matrix[0])

    for i in range(rows):
        for j in range(cols):
            print(matrix[i][j], end=' ')
        print()


# @matrix должна быть квадратной матрицей
def print_transpose_matrix(matrix):
    rows, cols = len(matrix), len(matrix[0])

    for j in range(cols):
        for i in range(rows):
            print(matrix[i][j], end=' ')
        print()


n, m = int(input()), int(input())

matrix = read_matrix(n, m)
print_matrix(matrix)
print()
print_transpose_matrix(matrix)
